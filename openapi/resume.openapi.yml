openapi: 3.0.0
info:
  title: ResumeAPI
  description: >-
    An API standard for retrieving resumes in JSON format, conformant with the JSON resume standard:
    https://jsonresume.org/
  version: 1.3.0
  contact:
    url: https://support.thorpincorp.com

# tags:
#   - name: Resume
#     description: A full json-resume compliant resume for a specific user
#   - name: Resource
#     description: >-
#       An individual resource item associated with a users resume. For example, work history

servers:
  - url: https://resume.thorpincorp.com
    description: Production resume API server
  - url: https://localhost:3000
    description: Local development server

security:
  - ResumapiSecurityScheme:
      - resume:read
      - resume:write
      - resource:read
      - resource:write

paths:
  /resume:
    get:
      operationId: GetResume
      description: Get full resume
      tags:
        - Resume
      security:
        - ResumapiSecurityScheme:
            - resume:read
      responses:
        '200':
          description: Successfully retrieved resume
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resume'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      operationId: CreateResume
      description: Create new resume
      tags:
        - Resume
      security:
        - ResumapiSecurityScheme:
            - resume:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resume'
            example:
              basics:
                name: Nicholas Thorp
                label: Software Integrations Engineer
                image: https://api.multiavatar.com/NicholasAndrewThorp.png
                email: nicholas.thorp@thorpincorp.com
                url: https://thorpincorp.com
                summary: I am an API developer :)
                profiles:
                  - network: Linkedin
                    username: nic-thorp
                    url: https://linkedin.com/nic-thorp
              languages:
                - language: English
                  fluency: Native or bilingual
              projects:
                - name: JSON Resume API
                  description: >-
                    Leverage the json-resume community driven open source standard to develop
                    a low-cost, cloud hosted, API fronted resume, that can be served by a static frontend
                  keywords:
                    - nodejs
                    - reactjs
                    - openapi
                    - mongodb
                    - google cloud platform
                    - google cloud storage
                    - google cloud functions
                    - oauth2
                    - lerna
                    - nx
                    - git
                    - gitlab
                    - netlify
                    - postman
                    - json
                    - docker
                    - docker-compose
                    - expressjs
                    - oauth2
                    - cloud dns
                    - gcp
                    - json-resume
                    - npm
                    - microservices
                    - markdown
                    - macos
                    - html
                    - css
                  startDate: '2022-02-18'
                  url: https://resume.thorpincorp.com
                  roles:
                    - Full-Stack Developer
                    - Software Architect
                    - Integrations Engineer
                  entity: Thorpincorp
      responses:
        '201':
          description: Successfully created resume
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resume'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdateResume
      description: Update resume
      tags:
        - Resume
      security:
        - ResumapiSecurityScheme:
            - resume:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resume'
            example:
              basics:
                name: John Doe
                label: Human Resources
              work:
                - name: Company Inc.
      responses:
        '200':
          description: Successfully updated resume
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resume'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      operationId: DeleteResume
      description: Delete resume
      tags:
        - Resume
      security:
        - ResumapiSecurityScheme:
            - resume:write
      responses:
        '204':
          description: Successfully deleted resume
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /basics:
    get:
      operationId: GetBasics
      description: Get resume summary
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basics'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdateBasics
      description: Update resume summary
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Basics'
            example:
              name: Juan Doe
              email: juan.doe@example.com
              url: juan.example.com
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basics'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /work:
    get:
      operationId: GetWorkEntries
      description: Get all resume work history entries
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/WorkId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      operationId: CreateWorkEntry
      description: Create resume work history entry
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work'
            example:
              name: Example Company Ltd.
              location: Main Street, NY
              position: Chief Executive Officer
      responses:
        '201':
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /work/{id}:
    get:
      operationId: GetWorkEntry
      description: Get specific resume work history entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdateWorkEntry
      description: Update specific resume work history entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work'
            example:
              name: Example Company Ltd.
              location: Main Street, NY
              position: Chief Executive Officer
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      operationId: DeleteWorkEntry
      description: Delete specific resume work history entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        '204':
          description: Successfully deleted resource
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /volunteer:
    get:
      operationId: GetVolunteerEntries
      description: Get all resume volunteering history entries
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/VolunteerId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      operationId: CreateVolunteerEntry
      description: Get specific resume volunteering history entry
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volunteer'
            example:
              organization: Samaritans
              position: Organiser
              url: https://www.samaritans.org
      responses:
        '201':
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolunteerId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /volunteer/{id}:
    get:
      operationId: GetVolunteerEntry
      description: Get specific resume volunteering history entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolunteerId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdateVolunteerEntry
      description: Update specific resume volunteering history entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volunteer'
            example:
              organization: Samaritans
              position: Organiser
              url: https://www.samaritans.org
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolunteerId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      operationId: DeleteVolunteerEntry
      description: Delete specific resume volunteering history entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        '204':
          description: Successfully deleted resource
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /education:
    get:
      operationId: GetEducationEntries
      description: Get all resume education history entries
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/EducationId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      operationId: CreateEducationEntry
      description: Create specific resume education history entry
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
            example:
              institution: Harvard University
              area: Anthropology
              studyType: Masters
      responses:
        '201':
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /education/{id}:
    get:
      operationId: GetEducationEntry
      description: Get specific resume education history entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdateEducationEntry
      description: Update specific resume education history entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
            example:
              institution: Harvard University
              area: Anthropology
              studyType: Masters
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      operationId: DeleteEducationEntry
      description: Delete specific resume education history entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        '204':
          description: Successfully deleted resource
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /awards:
    get:
      operationId: GetAwards
      description: Get all resume award entries
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/AwardId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      operationId: CreateAwards
      description: Create a resume award entry
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Award'
            example:
              title: Sadosky Prize
              awarder: Association for Women in Mathematics
      responses:
        '201':
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /awards/{id}:
    get:
      operationId: GetAward
      description: Get a specific resume award entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdateAward
      description: Update a specific resume award entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Award'
            example:
              title: Sadosky Prize
              awarder: Association for Women in Mathematics
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      operationId: DeleteAward
      description: Delete a specific resume award entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        '204':
          description: Successfully deleted resource
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /certificates:
    get:
      operationId: GetCertificates
      description: Get all resume certificate entries
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/CertificateId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      operationId: CreateCertificate
      description: Create a resume certificate entry
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
            example:
              name: Professional Cloud Architect
              issuer: Google
      responses:
        '201':
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /certificates/{id}:
    get:
      operationId: GetCertificate
      description: Get a specific resume certificate entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdateCertificate
      description: Update a specific resume certificate entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
            example:
              name: Professional Cloud Architect
              issuer: Google
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      operationId: DeleteCertificate
      description: Delete a specific resume certificate entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        '204':
          description: Successfully deleted resource
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /publications:
    get:
      operationId: GetPublications
      description: Get all resume publication entries
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/PublicationId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      operationId: CreatePublication
      description: Create a resume publication entry
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
            example:
              name: Supercapacitor Assisted LED lighting (SCALED) for DC-micro grids
              publisher: IEEE
              releaseDate: 2019-05-20
      responses:
        '201':
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /publications/{id}:
    get:
      operationId: GetPublication
      description: Get a specific resume publication entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdatePublication
      description: Update a specific resume publication entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
            example:
              name: Supercapacitor Assisted LED lighting (SCALED) for DC-micro grids
              publisher: IEEE
              releaseDate: 2019-05-20
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      operationId: DeletePublication
      description: Delete a specific resume publication entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        '204':
          description: Successfully deleted resource
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /skills:
    get:
      operationId: GetSkills
      description: Get all resume skill entries
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/SkillId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      operationId: CreateSkill
      description: Create a resume skill entry
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
            example:
              name: Juggling
              level: Guru
      responses:
        '201':
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /skills/{id}:
    get:
      operationId: GetSkill
      description: Get a specific resume skill entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdateSkill
      description: Update a specific resume skill entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
            example:
              name: Juggling
              level: Guru
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      operationId: DeleteSkill
      description: Delete a specific resume skill entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        '204':
          description: Successfully deleted resource
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /languages:
    get:
      operationId: GetLanguages
      description: Get all resume language entries
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/LanguageId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      operationId: CreateLanguage
      description: Create a resume language entry
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
            example:
              language: Spanish
              fluency: Professional working
      responses:
        '201':
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /languages/{id}:
    get:
      operationId: GetLanguage
      description: Get a specific resume language entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdateLanguage
      description: Update a specific resume language entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
            example:
              language: Spanish
              fluency: Professional working
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      operationId: DeleteLanguage
      description: Delete a specific resume language entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        '204':
          description: Successfully deleted resource
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /interests:
    get:
      operationId: GetInterests
      description: Get all resume interest entries
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/InterestId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      operationId: CreateInterest
      description: Create a resume interest entry
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest'
            example:
              name: Minerals
              keywords:
                - Rocks
                - Geology
                - Gems
      responses:
        '201':
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /interests/{id}:
    get:
      operationId: GetInterest
      description: Get a specific resume interest entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdateInterest
      description: Update a specific resume interest entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest'
            example:
              name: Minerals
              keywords:
                - Rocks
                - Geology
                - Gems
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      operationId: DeleteInterest
      description: Delete a specific resume interest entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        '204':
          description: Successfully deleted resource
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /references:
    get:
      operationId: GetReferences
      description: Get all resume reference entries
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/ReferenceId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      operationId: CreateReference
      description: Create a resume reference entry
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reference'
            example:
              name: Li Yu
              reference: 10/10 would recommend
      responses:
        '201':
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /references/{id}:
    get:
      operationId: GetReference
      description: Get a specific resume reference entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdateReference
      description: Update a specific resume reference entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reference'
            example:
              name: Li Yu
              reference: 10/10 would recommend
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      operationId: DeleteReference
      description: Delete a specific resume reference entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        '204':
          description: Successfully deleted resource
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /projects:
    get:
      operationId: GetProjects
      description: Get all resume project entries
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/ProjectId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      operationId: CreateProject
      description: Create a resume project entry
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
            example:
              name: Spy Cat Flaps
              description: Uploads spy software to cat microchips to create a mobile network of intel
      responses:
        '201':
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /projects/{id}:
    get:
      operationId: GetProject
      description: Get a specific resume project entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        '200':
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectId'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      operationId: UpdateProject
      description: Update a specific resume project entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
            example:
              name: Spy Cat Flaps
              description: Uploads spy software to cat microchips to create a mobile network of intel
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectId'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '409':
          $ref: '#/components/responses/409ErrorResponse'
        '415':
          $ref: '#/components/responses/415ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      operationId: DeleteProject
      description: Delete a specific resume project entry
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        '204':
          description: Successfully deleted resource
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '406':
          $ref: '#/components/responses/406ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'

components:
  securitySchemes:
    ResumapiSecurityScheme:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /oauth2/token
          scopes:
            resume:read: Read resume
            resume:write: Modify or delete resume
            resource:read: Read resume data
            resource:write: Create or update resume data

  parameters:
    id:
      name: id
      in: path
      description: Unique id or index of the resource
      required: true
      schema:
        $ref: "#/components/schemas/ResourceId"

  schemas:
    # JSON Resume Models
    Resume:
      type: object
      additionalProperties: false
      description: >-
        https://github.com/jsonresume/resume-schema/blob/master/schema.json
      required:
        - basics
      properties:
        basics:
          $ref: '#/components/schemas/Basics'
        work:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Work'
        volunteer:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Volunteer'
        education:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Education'
        awards:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Award'
        certificates:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Certificate'
        publications:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Publication'
        skills:
          type: array
          maxItems: 512
          items:
            $ref: '#/components/schemas/Skill'
        languages:
          type: array
          maxItems: 512
          items:
            $ref: '#/components/schemas/Language'
        interests:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Interest'
        references:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Reference'
        projects:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Project'
    Basics:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ContentBrief'
        label:
          $ref: '#/components/schemas/Name'
        image:
          $ref: '#/components/schemas/URL'
        email:
          $ref: '#/components/schemas/Email'
        phone:
          type: string
          maxLength: 32
          description: Phone number
          pattern: ^[0-9-+ ]{1,32}$
          example: +32 712-117-2923
        url:
          $ref: '#/components/schemas/URL'
        summary:
          $ref: '#/components/schemas/ContentExtended'
        location:
          type: object
          additionalProperties: false
          properties:
            address:
               $ref: '#/components/schemas/Name'
            postalCode:
              type: string
              maxLength: 16
              pattern: ^[\s\S]{0,16}$
            city:
              type: string
              maxLength: 64
              pattern: ^[\s\S]{0,64}$
            countryCode:
              type: string
              description: code as per ISO-3166-1 ALPHA-2, e.g. US, AU, IN
              maxLength: 2
              pattern: ^[A-Z]{2}$
            region:
              type: string
              description: >-
                The general region where you live. Can be a US state, or
                a province, for instance.
              maxLength: 64
              pattern: ^[\s\S]{0,64}$
        profiles:
          type: array
          description: Specify any number of social networks that you participate in
          maxItems: 128
          items:
            type: object
            additionalProperties: false
            properties:
              network:
                 $ref: '#/components/schemas/Name'
              username:
                 $ref: '#/components/schemas/Name'
              url:
                $ref: '#/components/schemas/URL'
      example:
        name: Jane Doe
        label: Business Accountant
        image: https://api.multiavatar.com/JaneDoe.png
        email: jane.doe@example.com
        phone: '+55555555'
        url: https://jane.example.com
        summary: 'A person with a really real work history!'
        location:
          address: 123 Fake street
          postalCode: '0001'
          city: Yorkton
          countryCode: CA
          region: Saskatchewan
        profiles:
          - network: MySpace
            username: definitely-real-jane
            url: https://jane.example.com/definitely-real-jane
    Work:
      type: object
      additionalProperties: false
      example:
        name: Real Company Inc.
        location: North Lazaro, Minnesota, United States
        description: Company specialising in making things
        position: Product Quality Manager
        url: https://www.example.com
        startDate: 2000-01-01
        endDate: 2012-12-31
        summary: In charge of ensuring things were made.
        highlights:
          - Making Things
          - Quality Assurance
      properties:
        name:
          $ref: '#/components/schemas/Name'
        location:
          $ref: '#/components/schemas/Name'
        description:
          $ref: '#/components/schemas/ContentExtended'
        position:
          $ref: '#/components/schemas/Name'
        url:
          $ref: '#/components/schemas/URL'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        summary:
          $ref: '#/components/schemas/ContentExtended'
        highlights:
          $ref: '#/components/schemas/ItemsList'
    WorkId:
      type: object
      description: Work resume resource with additional "id" field for API management
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/Name'
        location:
          $ref: '#/components/schemas/Name'
        description:
          $ref: '#/components/schemas/ContentExtended'
        position:
          $ref: '#/components/schemas/Name'
        url:
          $ref: '#/components/schemas/URL'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        summary:
          $ref: '#/components/schemas/ContentExtended'
        highlights:
          $ref: '#/components/schemas/ItemsList'
        id:
          $ref: '#/components/schemas/ResourceId'
    Volunteer:
      type: object
      additionalProperties: false
      example:
        organization: Conservation Society
        position: Tree Planter
        url: https://example.com
        startDate: 2000-01-01
        endDate: 2012-12-31
        summary: Helped plant 100 trees
        highlights:
          - Pulling Weeds
          - Social Engagement
          - Environmentally Aware
      properties:
        organization:
          $ref: '#/components/schemas/Name'
        position:
         $ref: '#/components/schemas/Name'
        url:
          $ref: '#/components/schemas/URL'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        summary:
          $ref: '#/components/schemas/ContentExtended'
        highlights:
          $ref: '#/components/schemas/ItemsList'
    VolunteerId:
      type: object
      additionalProperties: false
      properties:
        organization:
          $ref: '#/components/schemas/Name'
        position:
         $ref: '#/components/schemas/Name'
        url:
          $ref: '#/components/schemas/URL'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        summary:
          $ref: '#/components/schemas/ContentExtended'
        highlights:
          $ref: '#/components/schemas/ItemsList'
        id:
          $ref: '#/components/schemas/ResourceId'
    Education:
      type: object
      additionalProperties: false
      example:
        institution: Massachusetts Institute of Technology
        url: https://example.com
        area: Arts
        studyType: Bachelor
        startDate: 2000-01-01
        endDate: 2012-12-31
        score: '3.75'
        courses:
          - H1302 - Introduction to American history
          - E1102 - Environment Ecology
      properties:
        institution:
          $ref: '#/components/schemas/Name'
        url:
          $ref: '#/components/schemas/URL'
        area:
          $ref: '#/components/schemas/ShortName'
        studyType:
          $ref: '#/components/schemas/ShortName'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        score:
          type: string
          description: GPA scores ranging from 0.00 to 4.00
          maxLength: 4
          pattern: ^(?:[0-3](?:\.\d{1,2})?|4(?:\.0{1,2})?)$
          example: '3.75'
        courses:
          type: array
          description: List notable courses/subjects
          maxItems: 128
          items:
            $ref: '#/components/schemas/Name'
    EducationId:
      type: object
      additionalProperties: false
      properties:
        institution:
          $ref: '#/components/schemas/Name'
        url:
          $ref: '#/components/schemas/URL'
        area:
          $ref: '#/components/schemas/ShortName'
        studyType:
          $ref: '#/components/schemas/ShortName'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        score:
          type: string
          description: GPA scores ranging from 0.00 to 4.00
          maxLength: 4
          pattern: ^(?:[0-3](?:\.\d{1,2})?|4(?:\.0{1,2})?)$
          example: '3.75'
        courses:
          type: array
          description: List notable courses/subjects
          maxItems: 128
          items:
            $ref: '#/components/schemas/Name'
        id: 
          $ref: '#/components/schemas/ResourceId'
    Award:
      type: object
      additionalProperties: false
      example:
        title: One of the 100 greatest minds of the century
        date: 2010-01-01
        awarder: Time Magazine
        summary: Gifted for planting so many trees
      properties:
        title:
          $ref: '#/components/schemas/Name'
        date:
          $ref: '#/components/schemas/Date'
        awarder:
          $ref: '#/components/schemas/Name'
        summary:
          $ref: '#/components/schemas/ContentExtended'
    AwardId:
      type: object
      additionalProperties: false
      properties:
        title:
          $ref: '#/components/schemas/Name'
        date:
          $ref: '#/components/schemas/Date'
        awarder:
          $ref: '#/components/schemas/Name'
        summary:
          $ref: '#/components/schemas/ContentExtended'
        id:
          $ref: '#/components/schemas/ResourceId'
    Certificate:
      type: object
      additionalProperties: false
      example:
        name: Certified Kubernetes Administrator
        date: 2010-01-01
        url: https://example.com
        issuer: Cloud Native Computing Foundation
      properties:
        name:
          $ref: '#/components/schemas/Name'
        date:
          $ref: '#/components/schemas/Date'
        url:
          $ref: '#/components/schemas/URL'
        issuer:
          $ref: '#/components/schemas/Name'
    CertificateId:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/Name'
        date:
          $ref: '#/components/schemas/Date'
        url:
          $ref: '#/components/schemas/URL'
        issuer:
          $ref: '#/components/schemas/Name'
        id:
          $ref: '#/components/schemas/ResourceId'
    Publication:
      type: object
      additionalProperties: false
      example:
        name: The World Wide Web
        publisher: IEEE, Computer Magazine
        releaseDate: 2010-01-01
        url: https://example.com
        summary: Published as final year journal paper
      properties:
        name:
          $ref: '#/components/schemas/Name'
        publisher:
          $ref: '#/components/schemas/Name'
        releaseDate:
          $ref: '#/components/schemas/Date'
        url:
          $ref: '#/components/schemas/URL'
        summary:
          $ref: '#/components/schemas/ContentExtended'
    PublicationId:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/Name'
        publisher:
          $ref: '#/components/schemas/Name'
        releaseDate:
          $ref: '#/components/schemas/Date'
        url:
          $ref: '#/components/schemas/URL'
        summary:
          $ref: '#/components/schemas/ContentExtended'
        id:
          $ref: '#/components/schemas/ResourceId'
    Skill:
      type: object
      additionalProperties: false
      example:
        name: Web Development
        level: Master
        keywords:
          - HTML
          - CSS
      properties:
        name:
          $ref: '#/components/schemas/Name'
        level:
          type: string
          description: A self evaluated level of proficiency
          maxLength: 32
          pattern: ^[\s\S]{0,32}$
          example: Master
        keywords:
          $ref: '#/components/schemas/ItemsList'
    SkillId:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/Name'
        level:
          type: string
          description: A self evaluated level of proficiency
          maxLength: 32
          pattern: ^[\s\S]{0,32}$
          example: Master
        keywords:
          $ref: '#/components/schemas/ItemsList'
        id:
          $ref: '#/components/schemas/ResourceId'
    Language:
      type: object
      additionalProperties: false
      properties:
        language:
          type: string
          maxLength: 64
          pattern: ^[a-zA-Z\s()'-]+$
          example: English
        fluency:
          description: >-
            Language fluency according to the ILR scale
            https://en.wikipedia.org/wiki/ILR_scale
          type: string
          enum:
            - No proficiency
            - Elementary
            - Limited working
            - Professional working
            - Full professional
            - Native or bilingual
    LanguageId:
      type: object
      additionalProperties: false
      properties:
        language:
          type: string
          maxLength: 64
          pattern: ^[a-zA-Z\s()'-]+$
          example: English
        fluency:
          description: >-
            Language fluency according to the ILR scale
            https://en.wikipedia.org/wiki/ILR_scale
          type: string
          enum:
            - No proficiency
            - Elementary
            - Limited working
            - Professional working
            - Full professional
            - Native or bilingual
        id:
          $ref: '#/components/schemas/ResourceId'
    Interest:
      type: object
      additionalProperties: false
      example:
        name: Philosophy
        keywords:
          - Friedrich Nietzsche
          - Plato
      properties:
        name:
          $ref: '#/components/schemas/Name'
        keywords:
          $ref: '#/components/schemas/ItemsList'
    InterestId:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/Name'
        keywords:
          $ref: '#/components/schemas/ItemsList'
        id:
          $ref: '#/components/schemas/ResourceId'
    Reference:
      type: object
      additionalProperties: false
      example:
        name: Juanita Deer
        reference: >-
          Jane Doe is a very dedicated and hard worker. They have an odd fascination with trees.
          10/10 worker, you should hire them.
      properties:
        name:
          $ref: '#/components/schemas/Name'
        reference:
          $ref: '#/components/schemas/ContentExtended'
    ReferenceId:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/Name'
        reference:
          $ref: '#/components/schemas/ContentExtended'
        id:
          $ref: '#/components/schemas/ResourceId'
    Project:
      type: object
      additionalProperties: false
      example:
        name: The World Wide Web
        description: A global system of interconnected computer networks that uses the Internet protocol suite (TCP/IP)
        highlights:
          - Got to meet Tim Berners-Lee
        keywords:
          - Browser
          - IP Address
        startDate: 1994-10-03
        endDate: 1994-10-04
        url: https://www.example.com
        roles:
          - Developer
          - Consultant
        entity: CERN
        type: Hobby
      properties:
        name:
          $ref: '#/components/schemas/Name'
        description:
          $ref: '#/components/schemas/ContentExtended'
        highlights:
          $ref: '#/components/schemas/ItemsList'
        keywords:
          $ref: '#/components/schemas/ItemsList'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        url:
          $ref: '#/components/schemas/URL'
        roles:
          type: array
          description: Specify your role on this project or in company
          maxItems: 128
          items:
            $ref: '#/components/schemas/ContentBrief'
        entity:
          type: string
          description: Specify the relevant company/entity affiliations e.g. Greenpeace, ExxonMobil
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
          example: Corporation XYZ
        type:
          type: string
          description: Type of project, i.e. volunteering, presentation, talk, application, conference
          example: Home Automation
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
    ProjectId:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/Name'
        description:
          $ref: '#/components/schemas/ContentExtended'
        highlights:
          $ref: '#/components/schemas/ItemsList'
        keywords:
          $ref: '#/components/schemas/ItemsList'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        url:
          $ref: '#/components/schemas/URL'
        roles:
          type: array
          description: Specify your role on this project or in company
          maxItems: 128
          items:
            $ref: '#/components/schemas/ContentBrief'
        entity:
          type: string
          description: Specify the relevant company/entity affiliations e.g. Greenpeace, ExxonMobil
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
          example: Corporation XYZ
        type:
          type: string
          description: Type of project, i.e. volunteering, presentation, talk, application, conference
          example: Home Automation
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
        id:
          $ref: '#/components/schemas/ResourceId'
    # Error Schemas
    Error:
      type: object
      description: A Problem Details object (https://datatracker.ietf.org/doc/html/rfc7807)
      minProperties: 1
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/URL'
        title:
          $ref: '#/components/schemas/ContentBrief'
        status:
          type: integer
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          format: int32
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          $ref: '#/components/schemas/ContentExtended'
        instance:
          $ref: '#/components/schemas/URL'
    # Generic reusable resume resource schemas
    Date:
      type: string
      format: date
      description: RFC3339 compliant date string
      maxLength: 32
      example: 2020-12-28
      pattern: ^\d{4}-\d{2}-\d{2}$
    ShortName:
      type: string
      maxLength: 64
      example: Short string
      pattern: ^[\s\S]{0,64}$
    Name:
      type: string
      maxLength: 256
      example: Generic string
      pattern: ^[\s\S]{0,256}$
    URL:
      type: string
      description: RFC 3986 compliant URL string
      # Not supported until OpenAPI v3.1.0 https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#relativeReferencesURI
      # format: uri
      maxLength: 2048 # RFC 7230
      example: scheme://user:pass@subdomain.example.com/full/path?query=value
      pattern: ^(?:[^:/?#]+:)?(?:\/\/[^/?#]*)?(?:[^?#]*)(?:\?[^#]*)?(?:#.*)?$
    Email:
      type: string
      description: RFC 5321 compliant email string
      format: email
      maxLength: 254
      example: user@gmail.com
      pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
    ItemsList:
      type: array
      maxItems: 128
      items:
        $ref: '#/components/schemas/ContentBrief'
    ContentBrief:
      type: string
      description: A short (single line) content entry
      example: Lorem ipsum dolor sit amet
      maxLength: 256
      pattern: ^[a-zA-Z0-9\s`~!@#$%^&*()-=_+[\]{}|;:'",.<>/?\\]{0,256}$
    ContentExtended:
      type: string
      description: A medium length description or content block
      example: >-
        Praesent ac orci pharetra, mattis eros varius, congue arcu.
        Sed consectetur mi eget libero lacinia efficitur.
        Fusce id mi et nisi scelerisque pharetra.
        Nunc sodales ut nunc eu facilisis.
      maxLength: 8192
      pattern: ^[a-zA-Z0-9\s`~!@#$%^&*()-=_+[\]{}|;:'",.<>/?\\]{0,8192}$
    ResourceId:
      type: string
      readOnly: true  # Mark the property as read-only
      description: >-
        Any identifier that can be used to uniquely identify the resource.

        The resource pattern has been defined to support a range of patterns including:
          - Any alphanumeric character set, suitable for hex encoded strings
          - Support for dashes, allowing UUID strings
          - Support for all characters found in valid base64 encoded strings
      example: dfa47f83-6eac-408b-af5a-5ee3e079ea81
      maxLength: 64
      pattern: ^[A-Za-z0-9_\-+\/=]{1,64}$

  responses:
    400ErrorResponse:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/bad-request
            title: You have submitted a bad request
            status: 400
            detail: Request body has invalid parameter "param" on path request.body.key[0].value
    401ErrorResponse:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/unauthorized
            title: User is not authorized to access this endpoint
            status: 401
    403ErrorResponse:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/forbidden
            title: User does not have permission to modify this resource
            detail: User is only authorized to read resources on this endpoint
            status: 403
            instance: /work/1
    404ErrorResponse:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/not-found
            title: Resource not found
            status: 404
            instance: /not/a/real/path
    406ErrorResponse:
      description: Not Acceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/not-acceptable
            title: Not Acceptable
            detail: The requested resource cannot be served in any acceptable format
            status: 406
    409ErrorResponse:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/resource-conflict
            title: Conflict
            detail: The request could not be completed due to a conflict with the current state of the target resource.
            status: 409
    415ErrorResponse:
      description: Unsupported Media Type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/unsupported-media-type
            title: Unsupported Media Type
            detail: The server does not support the media type requested in the request.
            status: 415
    429ErrorResponse:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/too-many-requests
            title: Too Many Requests
            detail: The user has sent too many requests in a given amount of time.
            status: 429
    5XXErrorResponse:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/unexpected
            title: Unexpected Error
            status: 500
