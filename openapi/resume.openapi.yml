openapi: 3.0.0
info:
  title: ResumeAPI
  description: >-
    An API standard for retrieving resumes in JSON format, predominantly aligned with the JSON resume standard:
    https://jsonresume.org/
  version: 1.1.0

tags:
  - name: Resume
    description: A full json-resume compliant resume for a specific user
  - name: Resource
    description: >-
      An individual resource item associated with a users resume. For example, work history

servers:
  - url: https://resume.thorpincorp.com/
    description: Production resume API server
  - url: https://localhost:3000/
    description: Local development server

security:
  - ResumapiSecurityScheme:
      - resume:read
      - resume:write
      - resource:read
      - resource:write

paths:
  /resume:
    get:
      summary: Get Resume
      tags:
        - Resume
      security:
        - ResumapiSecurityScheme:
            - resume:read
      responses:
        200:
          description: Successfully retrieved resume
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resume'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      summary: Create Resume
      tags:
        - Resume
      security:
        - ResumapiSecurityScheme:
            - resume:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resume'
            example:
              basics:
                name: John Doe
                label: Human Resources
              work:
                - name: Company Inc.
      responses:
        201:
          description: Successfully created resume
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resume'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      summary: Update Resume
      tags:
        - Resume
      security:
        - ResumapiSecurityScheme:
            - resume:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resume'
            example:
              basics:
                name: John Doe
                label: Human Resources
              work:
                - name: Company Inc.
      responses:
        200:
          description: Successfully updated resume
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resume'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      summary: Delete Resume
      tags:
        - Resume
      security:
        - ResumapiSecurityScheme:
            - resume:write
      responses:
        204:
          description: Successfully deleted resume
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /basics:
    get:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basics'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Basics'
            example:
              name: Juan Doe
              email: juan.doe@example.com
              url: juan.example.com
      responses:
        200:
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basics'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /work:
    get:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/Work'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work'
            example:
              name: Example Company Ltd.
              location: Main Street, NY
              position: Chief Executive Officer
      responses:
        201:
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Work'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /work/{id}:
    get:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Work'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work'
            example:
              name: Example Company Ltd.
              location: Main Street, NY
              position: Chief Executive Officer
      responses:
        200:
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Work'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        204:
          description: Successfully deleted resource
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /volunteer:
    get:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/Volunteer'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volunteer'
            example:
              organization: Samaritans
              position: Organiser
              url: https://www.samaritans.org
      responses:
        201:
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volunteer'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /volunteer/{id}:
    get:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volunteer'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volunteer'
            example:
              organization: Samaritans
              position: Organiser
              url: https://www.samaritans.org
      responses:
        200:
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volunteer'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        204:
          description: Successfully deleted resource
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /education:
    get:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/Education'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
            example:
              institution: Harvard University
              area: Anthropology
              studyType: Masters
      responses:
        201:
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /education/{id}:
    get:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
            example:
              institution: Harvard University
              area: Anthropology
              studyType: Masters
      responses:
        200:
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        204:
          description: Successfully deleted resource
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /awards:
    get:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/Award'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Award'
            example:
              title: Sadosky Prize
              awarder: Association for Women in Mathematics
      responses:
        201:
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Award'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /awards/{id}:
    get:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Award'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Award'
            example:
              title: Sadosky Prize
              awarder: Association for Women in Mathematics
      responses:
        200:
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Award'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        204:
          description: Successfully deleted resource
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /certificates:
    get:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/Certificate'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
            example:
              name: Professional Cloud Architect
              issuer: Google
      responses:
        201:
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /certificates/{id}:
    get:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
            example:
              name: Professional Cloud Architect
              issuer: Google
      responses:
        200:
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        204:
          description: Successfully deleted resource
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /publications:
    get:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/Publication'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
            example:
              name: Supercapacitor Assisted LED lighting (SCALED) for DC-micro grids
              publisher: IEEE
              releaseDate: 2019-05-20
      responses:
        201:
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /publications/{id}:
    get:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
            example:
              name: Supercapacitor Assisted LED lighting (SCALED) for DC-micro grids
              publisher: IEEE
              releaseDate: 2019-05-20
      responses:
        200:
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        204:
          description: Successfully deleted resource
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /skills:
    get:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/Skill'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
            example:
              name: Juggling
              level: Guru
      responses:
        201:
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /skills/{id}:
    get:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
            example:
              name: Juggling
              level: Guru
      responses:
        200:
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        204:
          description: Successfully deleted resource
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /languages:
    get:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/Language'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
            example:
              language: Spanish
              fluency: Professional working
      responses:
        201:
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /languages/{id}:
    get:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
            example:
              language: Spanish
              fluency: Professional working
      responses:
        200:
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        204:
          description: Successfully deleted resource
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /interests:
    get:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/Interest'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest'
            example:
              name: Minerals
              keywords:
                - Rocks
                - Geology
                - Gems
      responses:
        201:
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /interests/{id}:
    get:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest'
            example:
              name: Minerals
              keywords:
                - Rocks
                - Geology
                - Gems
      responses:
        200:
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        204:
          description: Successfully deleted resource
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /references:
    get:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/Reference'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reference'
            example:
              name: Li Yu
              reference: 10/10 would recommend
      responses:
        201:
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /references/{id}:
    get:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reference'
            example:
              name: Li Yu
              reference: 10/10 would recommend
      responses:
        200:
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        204:
          description: Successfully deleted resource
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /projects:
    get:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resources
          content:
            application/json:
              schema:
                type: array
                maxItems: 256
                items:
                  $ref: '#/components/schemas/Project'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    post:
      tags:
        - Resource
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
            example:
              name: Spy Cat Flaps
              description: Uploads spy software to cat microchips to create a mobile network of intel
      responses:
        201:
          description: Successfully created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
  /projects/{id}:
    get:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:read
      responses:
        200:
          description: Successfully retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    put:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
            example:
              name: Spy Cat Flaps
              description: Uploads spy software to cat microchips to create a mobile network of intel
      responses:
        200:
          description: Successfully updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        400:
          $ref: '#/components/responses/400ErrorResponse'
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        409:
          $ref: '#/components/responses/409ErrorResponse'
        415:
          $ref: '#/components/responses/415ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'
    delete:
      tags:
        - Resource
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - ResumapiSecurityScheme:
            - resource:write
      responses:
        204:
          description: Successfully deleted resource
        401:
          $ref: '#/components/responses/401ErrorResponse'
        403:
          $ref: '#/components/responses/403ErrorResponse'
        404:
          $ref: '#/components/responses/404ErrorResponse'
        406:
          $ref: '#/components/responses/406ErrorResponse'
        429:
          $ref: '#/components/responses/429ErrorResponse'
        default:
          $ref: '#/components/responses/5XXErrorResponse'

components:
  securitySchemes:
    ResumapiSecurityScheme:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /oauth2/token
          scopes:
            resume:read: Read resume
            resume:write: Modify or delete resume
            resource:read: Read resume data
            resource:write: Create or update resume data

  parameters:
    id:
      name: id
      in: path
      description: Unique id or index of a resource in an array of resources
      required: true
      schema:
        type: string
        maxLength: 32
        pattern: ^[\w\-]+$
        example: 1234_123-id

  schemas:
    # JSON Resume Models
    Resume:
      type: object
      additionalProperties: false
      description: |
        https://github.com/jsonresume/resume-schema/blob/master/schema.json
      required:
        - basics
      properties:
        basics:
          $ref: '#/components/schemas/Basics'
        work:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Work'
        volunteer:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Volunteer'
        education:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Education'
        awards:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Award'
        certificates:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Certificate'
        publications:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Publication'
        skills:
          type: array
          maxItems: 512
          items:
            $ref: '#/components/schemas/Skill'
        languages:
          type: array
          maxItems: 512
          items:
            $ref: '#/components/schemas/Language'
        interests:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Interest'
        references:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Reference'
        projects:
          type: array
          maxItems: 128
          items:
            $ref: '#/components/schemas/Project'
      example:
        basics:
          name: Nicholas Thorp
          label: Software Integrations Engineer
          image: https://api.multiavatar.com/NicholasAndrewThorp.png
          email: nicholas.thorp@thorpincorp.com
          url: https://thorpincorp.com
          summary: I am an API developer :)
          profiles:
            - network: Linkedin
              username: nic-thorp
              url: https://linkedin.com/nic-thorp
        languages:
          - language: English
            fluency: Native or bilingual
        projects:
          - name: JSON Resume API
            description: >-
              Leverage the json-resume community driven open source standard to develop
              a low-cost, cloud hosted, API fronted resume, that can be served by a static frontend
            keywords:
              - nodejs
              - reactjs
              - openapi
              - mongodb
              - google cloud platform
              - google cloud storage
              - google cloud functions
              - oauth2
              - lerna
              - nx
              - git
              - gitlab
              - netlify
              - postman
              - json
              - docker
              - docker-compose
              - expressjs
              - oauth2
              - cloud dns
              - gcp
              - json-resume
              - npm
              - microservices
              - markdown
              - macos
              - html
              - css
            startDate: '2022-02-18'
            url: https://resume.thorpincorp.com
            roles:
              - Full-Stack Developer
              - Software Architect
              - Integrations Engineer
            entity: Thorpincorp
    Basics:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ContentBrief'
        label:
          type: string
          example: Web Developer
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
        image:
          $ref: '#/components/schemas/URL'
        email:
          $ref: '#/components/schemas/Email'
        phone:
          type: string
          maxLength: 32
          description: Phone number
          pattern: ^[0-9-]{1,32}+$
          example: 712-117-2923
        url:
          $ref: '#/components/schemas/URL'
        summary:
          $ref: '#/components/schemas/ContentExtended'
        location:
          type: object
          additionalProperties: false
          properties:
            address:
              type: string
              description: >-
                To add multiple address lines, use \n. For example, 1234
                Main Street\nCentral Building, Level 2.
              maxLength: 256
              pattern: ^[\s\S]{0,256}$
            postalCode:
              type: string
              maxLength: 16
              pattern: ^[\s\S]{0,16}$
            city:
              type: string
              maxLength: 64
              pattern: ^[\s\S]{0,64}$
            countryCode:
              type: string
              description: code as per ISO-3166-1 ALPHA-2, e.g. US, AU, IN
              maxLength: 2
              pattern: ^[A-Z]{2}$
            region:
              type: string
              description: >-
                The general region where you live. Can be a US state, or
                a province, for instance.
              maxLength: 64
              pattern: ^[\s\S]{0,64}$
        profiles:
          type: array
          description: Specify any number of social networks that you participate in
          maxItems: 128
          items:
            type: object
            additionalProperties: false
            properties:
              network:
                type: string
                maxLength: 256
                example: Facebook or Twitter
                pattern: ^[\s\S]{0,256}$
              username:
                type: string
                maxLength: 256
                example: user01
                pattern: ^[\s\S]{0,256}$
              url:
                $ref: '#/components/schemas/URL'
      example:
        name: Jane Doe
        label: Business Accountant
        image: https://api.multiavatar.com/JaneDoe.png
        email: jane.doe@example.com
        phone: '+55555555'
        url: jane.example.com
        summary: 'A person with a really real work history!'
        location:
          address: 123 Fake street
          postalCode: '0001'
          city: Yorkton
          countryCode: CA
          region: Saskatchewan
        profiles:
          - network: MySpace
            username: definitely-real-jane
            url: https://jane.example.com/definitely-real-jane
    Work:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          example: Real Company Inc.
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
        location:
          type: string
          example: North Lazaro, Minnesota, United States
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
        description:
          type: string
          example: Making totally real products for real people
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
        position:
          type: string
          example: Product Quality Manager
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
        url:
          $ref: '#/components/schemas/URL'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        summary:
          $ref: '#/components/schemas/ContentExtended'
        highlights:
          type: array
          description: Specify multiple accomplishments
          maxItems: 128
          items:
            $ref: '#/components/schemas/ContentBrief'
          example:
            - Commuting
            - Time sheets
            - Lunch breaks
    Volunteer:
      type: object
      additionalProperties: false
      properties:
        organization:
          type: string
          example: Conservation
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
        position:
          type: string
          example: Tree Planting
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
        url:
          $ref: '#/components/schemas/URL'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        summary:
          $ref: '#/components/schemas/ContentExtended'
        highlights:
          type: array
          description: Specify accomplishments and achievements
          maxItems: 128
          items:
            $ref: '#/components/schemas/ContentBrief'
          example:
            - Pulling weeds
            - Growing Saplings
    Education:
      type: object
      additionalProperties: false
      properties:
        institution:
          type: string
          example: Massachusetts Institute of Technology
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
        url:
          $ref: '#/components/schemas/URL'
        area:
          type: string
          example: Arts
          maxLength: 64
          pattern: ^[\s\S]{0,64}$
        studyType:
          type: string
          example: Bachelor
          maxLength: 64
          pattern: ^[\s\S]{0,64}$
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        score:
          type: string
          description: GPA scores ranging from 0.00 to 4.00
          maxLength: 4
          pattern: ^(?:[0-3](?:\.\d{1,2})?|4(?:\.0{1,2})?)$
          example: '3.75'
        courses:
          type: array
          description: List notable courses/subjects
          maxItems: 128
          items:
            type: string
            example: H1302 - Introduction to American history
            maxLength: 256
            pattern: ^[\s\S]{0,256}$
    Award:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
          example: One of the 100 greatest minds of the century
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
        date:
          $ref: '#/components/schemas/Date'
        awarder:
          type: string
          example: Time Magazine
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
        summary:
          $ref: '#/components/schemas/ContentExtended'
    Certificate:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
          example: Certified Kubernetes Administrator
        date:
          $ref: '#/components/schemas/Date'
        url:
          $ref: '#/components/schemas/URL'
        issuer:
          type: string
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
          example: Cloud Native Computing Foundation
    Publication:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
          example: The World Wide Web
        publisher:
          type: string
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
          example: IEEE, Computer Magazine
        releaseDate:
          $ref: '#/components/schemas/Date'
        url:
          $ref: '#/components/schemas/URL'
        summary:
          $ref: '#/components/schemas/ContentExtended'
    Skill:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
          example: Web Development
        level:
          type: string
          description: A self evaluated level of proficiency
          maxLength: 32
          pattern: ^[\s\S]{0,32}$
          example: Master
        keywords:
          type: array
          maxItems: 128
          description: List some keywords pertaining to this skill
          items:
            $ref: '#/components/schemas/ContentBrief'
    Language:
      type: object
      additionalProperties: false
      properties:
        language:
          type: string
          maxLength: 64
          pattern: ^[a-zA-Z\s()'-]+$
          example: English
        fluency:
          description: >-
            Language fluency according to the ILR scale
            https://en.wikipedia.org/wiki/ILR_scale
          type: string
          enum:
            - No proficiency
            - Elementary
            - Limited working
            - Professional working
            - Full professional
            - Native or bilingual
    Interest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
          example: Philosophy
        keywords:
          type: array
          maxItems: 128
          items:
            type: string
            maxLength: 256
            pattern: ^[\s\S]{0,256}$
            example: Friedrich Nietzsche
    Reference:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          description: Person or entity providing a reference
          example: Juanita Deer
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
        reference:
          $ref: '#/components/schemas/ContentExtended'
    Project:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
          example: The World Wide Web
        description:
          $ref: '#/components/schemas/ContentBrief'
        highlights:
          type: array
          description: Specify multiple project highlights
          maxItems: 128
          items:
            $ref: '#/components/schemas/ContentBrief'
        keywords:
          type: array
          description: Specify special elements involved
          maxItems: 128
          items:
            $ref: '#/components/schemas/ContentBrief'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        url:
          $ref: '#/components/schemas/URL'
        roles:
          type: array
          description: Specify your role on this project or in company
          maxItems: 128
          items:
            $ref: '#/components/schemas/ContentBrief'
        entity:
          type: string
          description: Specify the relevant company/entity affiliations e.g. 'greenpeace', 'corporationXYZ'
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
          example: Personal
        type:
          type: string
          description: Type of project, i.e. volunteering, presentation, talk, application, conference
          example: Home Automation
          maxLength: 256
          pattern: ^[\s\S]{0,256}$
    # Error Schemas
    Error:
      type: object
      description: A Problem Details object (https://datatracker.ietf.org/doc/html/rfc7807)
      minProperties: 1
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/URL'
        title:
          $ref: '#/components/schemas/ContentBrief'
        status:
          type: integer
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          format: int32
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          $ref: '#/components/schemas/ContentExtended'
        instance:
          $ref: '#/components/schemas/URL'
    # Generic reusable schemas
    Date:
      type: string
      format: date
      description: RFC3339 compliant date string
      maxLength: 32
      example: 2020-28-12
      pattern: ^\d{4}-\d{2}-\d{2}$
    URL:
      type: string
      description: RFC 3986 compliant URL string
      format: uri
      maxLength: 2048 # RFC 7230
      example: http://example.com/path
      pattern: ^(?:[^:/?#]+:)?(?:\/\/[^/?#]*)?(?:[^?#]*)(?:\?[^#]*)?(?:#.*)?$
    Email:
      type: string
      description: RFC 5321 compliant email string
      format: email
      maxLength: 254
      example: user@gmail.com
      pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
    ContentBrief:
      type: string
      description: A short (single line) content entry
      example: Lorem ipsum dolor sit amet
      maxLength: 128
      pattern: ^[a-zA-Z0-9\s`~!@#$%^&*()-=_+[\]{}|;:'",.<>/?\\]{0,128}$
    ContentExtended:
      type: string
      description: A medium length description or content block
      example: >-
        Praesent ac orci pharetra, mattis eros varius, congue arcu.
        Sed consectetur mi eget libero lacinia efficitur.
        Fusce id mi et nisi scelerisque pharetra.
        Nunc sodales ut nunc eu facilisis.
        Mauris lobortis lectus non tellus iaculis luctus eu at elit.
        Donec posuere eleifend odio, at convallis purus dapibus sit amet.
      maxLength: 8192
      pattern: ^[a-zA-Z0-9\s`~!@#$%^&*()-=_+[\]{}|;:'",.<>/?\\]{0,8192}$

  responses:
    400ErrorResponse:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/bad-request
            title: You have submitted a bad request
            status: 400
            detail: Request body has invalid parameter "param" on path request.body.key[0].value
    401ErrorResponse:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/unauthorized
            title: User is not authorized to access this endpoint
            status: 401
    403ErrorResponse:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/forbidden
            title: User does not have permission to modify this resource
            detail: User is only authorized to read resources on this endpoint
            status: 403
            instance: /work/1
    404ErrorResponse:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/not-found
            title: Resource not found
            status: 404
            instance: /not/a/real/path
    406ErrorResponse:
      description: Not Acceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/not-acceptable
            title: Not Acceptable
            detail: The requested resource cannot be served in any acceptable format
            status: 406
    409ErrorResponse:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/resource-conflict
            title: Conflict
            detail: The request could not be completed due to a conflict with the current state of the target resource.
            status: 409
    415ErrorResponse:
      description: Unsupported Media Type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/unsupported-media-type
            title: Unsupported Media Type
            detail: The server does not support the media type requested in the request.
            status: 415
    429ErrorResponse:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/too-many-requests
            title: Too Many Requests
            detail: The user has sent too many requests in a given amount of time.
            status: 429
    5XXErrorResponse:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            type: https://example.com/errors/unexpected
            title: Unexpected Error
            status: 500
